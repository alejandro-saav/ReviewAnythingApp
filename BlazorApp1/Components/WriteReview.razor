@page "/"
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveServer
@attribute [Authorize]

<nav class="bottom-navbar">
    <a class="explore-text" href="#">Explore Reviews</a>
    <div class="profile-circle">
        <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none">
            <!-- Circle background -->
            <circle cx="12" cy="12" r="11" stroke="#FE5D26" stroke-width="2" fill="none"/>
            <!-- User icon -->
            <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z" fill="#FE5D26"/>
        </svg>

    </div>
</nav>
<div class="write-review-container">
    
<div class="write-review-wrapper">
    <h1 class="page-title">Write a Review</h1>


    <EditForm Model="@ReviewModel" OnValidSubmit="CreateNewReview" FormName="CreateReview">
        <DataAnnotationsValidator />
    <div class="categories">
        @foreach (var category in Categories) {
            <button 
                class="category-btn @(SelectedCategory == category.CategoryName ? "active" : "")"
                @onclick="() => SelectCategory(category)">
                @category.CategoryName
            </button>
        }
        <ValidationMessage For="@(() => ReviewModel.CategoryId)" />
    </div>
        <div class="form-group">
            <label class="form-label" for="reviewTitle">Review Title</label>
            <input type="text" id="reviewTitle" @bind="ReviewModel.Title" class="form-input review-title-input" placeholder="Enter your review title..." required>
            <ValidationMessage For="@(() => ReviewModel.Title)"/>
        </div>

        <div class="form-group">
            <div class="rating-container">
                <label class="form-label" for="reviewContent">Review Content</label>
                <div class="@(AnimateRatingError ? "animate-error" : "")">
                    <span>rating:</span>
                    @for (int i = 1; i <= 5; i++)
                    {
                        int starValue = i;
                        <span
                            class="star @(starValue <= (HoverRating > 0 ? HoverRating : ReviewModel.Rating) ? "selected" : "")"
                            @onclick="@(() => SetRating(starValue))"
                            @onmouseover="@(() => SetHoverRating(starValue))"
                            @onmouseout="@(() => ClearHover())">
                            â˜…
                        </span>
                    }
                </div>
            </div>
            <textarea id="reviewContent" class="form-input form-textarea" 
                placeholder="Share your thoughts and experience..." required @bind="ReviewModel.Content">
            </textarea>
            <ValidationMessage For="@(() => ReviewModel.Content)"/>
            <div class="hellno">
                <label for="tag-input">Tags:</label>
                <ul>
                    @foreach (var tag in ReviewModel.Tags)
                    {
                        <li class="tag">
                            @tag
                            <button class="remove-tag-btn" type="button" @onclick="() => RemoveTag(tag)">x</button>
                        </li>
                    }
                    @if (!string.IsNullOrEmpty(ErrorTagMessage))
                    {
                        <span class="error-message">@ErrorTagMessage</span>
                    }
                </ul>
            </div>
            <input id="tag-input" class="form-input"
                   placeholder="Add 5 tags max. (no special characters allow, just letters and numbers)" @onkeydown="HandleKeyDown" @bind="NewTag"
                   @bind:event="oninput" type="text" autocomplete="off"/>
        </div>

        <button type="submit" class="submit-btn">Create Review</button>
    </EditForm>
</div>


</div>
