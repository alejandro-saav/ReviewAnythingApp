@page "/signup"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Forms



<div class="signup-container">
    <div class="signup-wrapper">
        <!-- SignUp Panel -->
        <div class="signup-panel">
            <h2 class="panel-title">Sign up</h2>

            <EditForm Model="@SignUpModel" OnValidSubmit="HandleSignUp" FormName="signupForm">
                <DataAnnotationsValidator />
                <div class="form-container">
                    <div class="required-fields-container">
                        <div class="form-group">
                            <label for="username">Username:<span class="asterisk"> *</span></label>
                            <input type="text" @bind="SignUpModel.UserName" @bind:event="oninput" placeholder="Username"
                                class="form-input" id="username" />
                            <ValidationMessage For="@(() => SignUpModel.UserName)" class="validation-error" />
                        </div>

                        <div class="form-group">
                            <label for="firstname">Firstname:<span class="asterisk"> *</span></label>
                            <input type="text" @bind="SignUpModel.FirstName" @bind:event="oninput"
                                placeholder="Firstname" class="form-input" id="firstname" />
                            <ValidationMessage For="@(() => SignUpModel.FirstName)" class="validation-error" />
                        </div>

                        <div class="form-group">
                            <label for="email">Email:<span class="asterisk"> *</span></label>
                            <input type="email" @bind="SignUpModel.Email" @bind:event="oninput"
                                placeholder="Email Address" class="form-input" id="email" />
                            <ValidationMessage For="@(() => SignUpModel.Email)" class="validation-error" />
                        </div>

                        <div class="form-group">
                            <label for="password">Password:<span class="asterisk"> *</span></label>
                            <input type="password" @bind="SignUpModel.Password" @bind:event="oninput"
                                placeholder="Password" class="form-input" id="password" />
                            <ValidationMessage For="@(() => SignUpModel.Password)" class="validation-error" />
                        </div>
                    </div>
                    <div class="optional-fields-container">
                        <div class="form-group">
                            <label for="lastname">Lastname:</label>
                            <input type="text" @bind="SignUpModel.LastName" @bind:event="oninput" placeholder="LastName"
                                class="form-input" id="lastname" />
                            <ValidationMessage For="@(() => SignUpModel.LastName)" class="validation-error" />
                        </div>



                        <div class="form-group">
                            <label for="phone">Phone Number:</label>
                            <input type="text" @bind="SignUpModel.Phone" @bind:event="oninput"
                                placeholder="Phone number" class="form-input" id="phone" />
                            <ValidationMessage For="@(() => SignUpModel.Phone)" class="validation-error" />
                        </div>

                        <div class="upload-container">
                            <label for="profile-upload" class="profile-upload">
                                Profile Picture: <span class="image-name">@ImageNameSelected</span>
                            </label>
                            @if (string.IsNullOrEmpty(ImagePreviewUrl))
                            {
                                @* <div class="profile-icon">ðŸ‘¤</div> *@
                                <label class="svg-container" for="profile-upload">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24"
                                        fill="none">
                                        <!-- Circle background -->
                                        <circle cx="12" cy="12" r="11" stroke="#FE5D26" stroke-width="2" fill="none" />
                                        <!-- User icon -->
                                        <path
                                            d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                            fill="#FE5D26" />
                                    </svg>
                                    <span class="plus-sign">+</span>

                                </label>
                            }
                            else
                            {
                                <label for="profile-upload">
                                    <div class="image-preview" id="imagePreview">
                                        <img id="previewImg" src="@ImagePreviewUrl" alt="Profile Preview">
                                        <button type="button" class="remove-btn" @onclick="HandleRemovePhoto">Ã—</button>
                                    </div>
                                </label>
                            }
                            <InputFile id="profile-upload" accept="image/*" OnChange="HandleImageSelected"
                                style="display: none;" />
                            @* <input type="file" id="profile-upload" accept="image/*" hidden> *@

                            @* <!-- Preview area (hidden initially) --> *@
                        </div>
                        @if (!string.IsNullOrEmpty(ImageErrorMessage))
                        {
                            <div class="error-message img-error-message" style="margin-bottom: 10px">@ImageErrorMessage
                            </div>
                        }
                        <div class="form-group">
                            <label for="bio">Biography:</label>
                            <textarea type="text" @bind="SignUpModel.Bio" @bind:event="oninput"
                                placeholder="Bio max length(500)" class="form-input" id="bio" maxlength="500"
                                style="resize: none"></textarea>
                            <ValidationMessage For="@(() => SignUpModel.Bio)" class="validation-error" />
                        </div>
                    </div>
                </div>
                <button type="submit" class="btn-primary" disabled="@IsLoading">
                    @if (IsLoading)
                    {
                        <div class="spinner-container">
                            <span class="spinner"></span>
                            <span>Loading...</span>
                        </div>
                    }
                    else
                    {
                        <span>Signup</span>
                    }
                </button>

                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <div class="error-message">@ErrorMessage</div>
                }
            </EditForm>
        </div>
    </div>
</div>
@* <script> *@
@*     document.addEventListener('DOMContentLoaded', function () { *@
@*         const profileUpload = document.getElementById('profile-upload'); *@
@*         const imagePreview = document.getElementById('imagePreview'); *@
@*         const previewImg = document.getElementById('previewImg'); *@
@*         const removeBtn = document.getElementById('removeBtn'); *@
@*         const uploadLabel = document.querySelector('.profile-upload'); *@
@*         console.log("FOCUS MEN FOCUS MEN FOCUS MEN FOCUS MEN FOCUS MEN"); *@
@*         /* *@
@* *@
@*         profileUpload.onchange = function () { *@
@*             console.log("does this work?"); *@
@*         } *@
@* */ *@
@*         profileUpload.addEventListener('change', function(e) { *@
@*             e.target.preventDefault(); *@
@*             console.log("Input Fire"); *@
@*             const file = e.target.files[0]; *@
@* *@
@*             if (file) { *@
@*                 // Validate file type *@
@*                 if (!file.type.startsWith('image/')) { *@
@*                     alert('Please select a valid image file'); *@
@*                     return; *@
@*                 } *@
@* *@
@*                 // Validate file size (5MB limit) *@
@*                 if (file.size > 5 * 1024 * 1024) { *@
@*                     alert('File size must be less than 5MB'); *@
@*                     return; *@
@*                 } *@
@* *@
@*                 const reader = new FileReader(); *@
@* *@
@*                 reader.onload = function(e) { *@
@*                     previewImg.src = e.target.result; *@
@*                     imagePreview.style.display = 'block'; *@
@*                     uploadLabel.style.display = 'none'; *@
@*                 }; *@
@* *@
@*                 reader.readAsDataURL(file); *@
@*             } *@
@*         }); *@
@*         removeBtn.addEventListener('click', function () { *@
@*             console.log("YO"); *@
@*             profileUpload.value = ''; *@
@*             imagePreview.style.display = 'none'; *@
@*             uploadLabel.style.display = 'flex'; *@
@*             previewImg.src = ''; *@
@*         }); *@
@* *@
@*         // Drag and drop functionality *@
@*         uploadLabel.addEventListener('dragover', function (e) { *@
@*             e.preventDefault(); *@
@*             this.style.background = 'rgba(142, 36, 170, 0.3)'; *@
@*         }); *@
@* *@
@*         uploadLabel.addEventListener('dragleave', function (e) { *@
@*             e.preventDefault(); *@
@*             this.style.background = 'rgba(142, 36, 170, 0.1)'; *@
@*         }); *@
@* *@
@*         uploadLabel.addEventListener('drop', function (e) { *@
@*             e.preventDefault(); *@
@*             this.style.background = 'rgba(142, 36, 170, 0.1)'; *@
@* *@
@*             const files = e.dataTransfer.files; *@
@*             if (files.length > 0) { *@
@*                 profileUpload.files = files; *@
@*                 profileUpload.dispatchEvent(new Event('change')); *@
@*             } *@
@*         }); *@
@*     }); *@
@* </script> *@
